from rsf.proj import *
import numpy as np
import copy
import sys
from subprocess import check_output as co
sys.path.append('./include')

from forward import forward
import base
from helper import *
import os
from subprocess import check_output as co
import re
proj = Project()

#define libs and cflags
libs=['rsf++']
cflags='-I. -I./include -w'

#add to compilation command
proj.Prepend(LIBS=libs)
proj.Replace(CCFLAGS=cflags)

#compile programs
#elas = proj.Program('./include/myelastic.cc')
#elas = proj.Program('./include/elastictop.c')
elas = proj.Program('./include/elastictopstack.c')

modes = ['sobolev', 'w2split', 'w2linexp', 'w2square', 'w2exp', 'w2linear']

mode_nos = [get_mode(m) for m in modes]

ps = [{'s': 0.0}, {}, {'c1': 1e-10}, {}, {'c1': 1e-10}, {}]

#add other param for setting nz,nx simultaneously
n_all_z = 2
n_all_x = 2

#create z for convexity
z = [0.2, 0.8, n_all_z]

#create x for convexity
#x = [0.2, 0.8, n_all]
x = [0.2, 0.8, n_all_x]

#define probability space granularity
np_factor = 10.0
create_synthetic_data(z, x, np_factor)
Flow('refcpyz', 'wavz_syntheticstacked',
    '''
    transp plane=12 | transp plane=23
    ''')
Flow('refcpyx', 'wavx_syntheticstacked',
    '''
    transp plane=12 | transp plane=23
    ''')

Result('obsz', 'wavz_syntheticstacked', 
    '''
    transp plane=12 |
    grey color=i scalebar=y title="Z observations" 
        label1=Time unit1=s label2=ReceiverLoc unit2=km
    ''')
Result('obsx', 'wavx_syntheticstacked', 
    '''
    transp plane=12 | 
    grey color=i scalebar=y title="X observations" 
        label1=Time unit1=s label2=ReceiverLoc unit2=km
    ''')


Flow('wavz_shifted_t', 'wavz_shifted', 'transp plane=12 | transp plane=23')
Flow('wavx_shifted_t', 'wavx_shifted', 'transp plane=12 | transp plane=23')

take_first = 5
take_first = 1 + max(1, min(take_first, n_all_x*n_all_z))

Result('obsz_traces', 'refcpyz wavz_shifted_t', 
    '''
    cat ${SOURCES[1]} axis=2 |
    window f2=0 n2=%d |
    graph title="Z traces" label1="Time" unit1="s" label2="Displacement"
    '''%take_first)
Result('obsx_traces', 'refcpyx wavx_shifted_t', 
    '''
    cat ${SOURCES[1]} axis=2 |
    window f2=0 n2=%d |
    graph title="X traces" label1="Time" unit1="s" label2="Displacement"
    '''%take_first)

wasstrace = proj.Program('wassfulltrace.cc')

Flow('proper_shifted', 'wavz_shifted_t', 
    '''
    transp plane=23 | 
    window f3=0 n3=1
    ''')

Flow('proper_refz', 'refcpyz',
    '''
    transp plane=23 | 
    window f3=0 n3=1
    ''')

modes = [0,1]
for m in modes:
    Flow('wassz%d'%m, 
        'proper_shifted proper_refz t p %s'%wasstrace[0],
        '''
        ./${SOURCES[4]}
        g=${SOURCES[1]}
        t=${SOURCES[2]}
        p=${SOURCES[3]}
        mode=%d
        '''%m)
   
    Result('wassz%d'%m, 'wassz%d'%m, 
        'graph title="W2 mode=%d" scalebar=y'%m)
 
proj.End()
